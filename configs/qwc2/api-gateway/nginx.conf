server {
    listen       80;
    server_name  localhost;

    proxy_redirect off;
    server_tokens off;

    location / {
        return 301 https://$host/commun/;
    }

    location /auth {
        # Set headers for original request host
        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto 'https';

        proxy_pass http://qwc-auth-service:9090;
    }

    location ~ ^/(?<t>aeag|aeap|aelb|aerm|aermc|aesn|commun|dsiun|default) {
        # Extract tenant
        proxy_set_header   Tenant            $t;
        # Set headers for original request host
        proxy_set_header   Host              $http_host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto 'https';

        # Redirection Global config generator
        location ~ ^/[^/]+/generate_configs {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-global-config-service:9090;
        }

        # Redirection Auth service
        location ~ ^/[^/]+/auth {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-auth-service:9090;
        }

        # Redirection OGC service
        location ~ ^/[^/]+/ows {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-ogc-service:9090;
        }

        # Redirection Data service
        location ~ ^/[^/]+/api/v1/data {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-data-service:9090;
        }

        # Redirection feature info service
        location ~ ^/[^/]+/api/v1/featureinfo {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-feature-info-service:9090;
        }

        # Redirection fulltext search service
        location ~ ^/[^/]+/api/v2/search {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-fulltext-search-service:9090;
        }

        # Redirection Admin GUI service
        location ~ ^/[^/]+/qwc_admin {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-admin-gui:9090;
        }

        # Redirection Elevation service
        location ~ ^/[^/]+/elevation {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-elevation-service:9090;
        }

        # Redirection Permalink service
        location ~ ^/[^/]+/api/v1/permalink {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-permalink-service:9090;
        }

        # Redirection Print service
        location ~ ^/[^/]+/api/v1/print {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-print-service:9090;
        }

        # Redirection Map info service
        location ~ ^/[^/]+/api/v1/mapinfo {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-mapinfo-service:9090;
        }

        # Redirection Legend service
        location ~ ^/[^/]+/api/v1/legend {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-legend-service:9090;
        }

        # Redirection Project publisher service
        location ~ ^/[^/]+/publisher {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-project-publisher:9090;
        }

        # Place these last to give precedence to the other rules:

        # Redirect request without trailing slash
        location ~ ^(/[^/]+)$ {
            return 301 $scheme://$http_host$1/;
        }
        location ~ ^/[^/]+/ {
            rewrite ^/[^/]+(.+) $1 break;
            proxy_pass http://qwc-map-viewer:9090;
        }
    }
}
