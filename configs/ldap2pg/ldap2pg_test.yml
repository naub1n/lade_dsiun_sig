#
#
#       L D A P 2 P G   S A M P L E   C O N F I G U R A T I O N
#
#
# This is a starting point configuration file for ldap2pg.yml. Including static
# roles, groups, privilege and LDAP search.
#
# This configuration assumes the following principles:
#
# - All LDAP users are grouped in `ldap_roles` group.
# - Read privileges are granted to `readers` group.
# - Write privileges are granted to `writers` group.
# - DDL privileges are granted to `owners` group.
# - We have one or more databases with public and maybe a schema.
# - Grants are not specific to a schema. Once you're writer in a database, you
#   are writer to all schemas in it.
#
# The LDAP directory content is described in fixtures/openldap-data.ldif
#
# Adapt to your needs! See also full documentation on how to configure ldap2pg
# at https://ldap2pg.readthedocs.io/en/latest/config/.
#
# Don't hesitate to suggest improvements for this starting configuration at
# https://github.com/dalibo/ldap2pg/issues/new . Thanks for your contribution !
#

#
# File format version. Allows ldap2pg to check whether the file is supported.
#
version: 5

#
#       1.   P O S T G R E S   I N S P E C T I O N
#
#  See https://ldap2pg.readthedocs.io/en/latest/postgres/
#

dry: False

postgres:
  # List of role names which can be dropped from cluster. Privileges on these
  # roles can be revoked.
  # managed_roles_query: |
  #   SELECT 'public'
  #   UNION
  #   SELECT DISTINCT role.rolname
  #   FROM pg_roles AS role
  #   LEFT OUTER JOIN pg_auth_members AS ms ON ms.member = role.oid
  #   LEFT OUTER JOIN pg_roles AS ldap_roles
  #     ON ldap_roles.rolname = 'ldap_roles' AND ldap_roles.oid = ms.roleid
  #   WHERE role.rolname IN ('ldap_roles', 'readers', 'writers', 'owners')
  #       OR ldap_roles.oid IS NOT NULL
  #   ORDER BY 1;
  managed_roles_query: |
    VALUES
      ('public'),
      ('ldap_roles'),
      ('SVC_SIG_4AD@lesagencesdeleau.eu')

    UNION
    SELECT DISTINCT role.rolname
    FROM pg_roles AS role;

  roles_blacklist_query:
  - postgres
  - "pg_*"
  - "rds_*"

  # List of object owners that requires default privileges configuration. Since
  # readers/writer/owners groups are globals to cluster, we have a global
  # owners_query.
  owners_query: |
    SELECT DISTINCT role.rolname
    FROM pg_catalog.pg_roles AS role
    JOIN pg_catalog.pg_auth_members AS ms ON ms.member = role.oid
    JOIN pg_catalog.pg_roles AS owners
      ON owners.rolname = 'owners' AND owners.oid = ms.roleid
    ORDER BY 1;

  # Exclude information_schema, pg_catalog, pg_toast, and other system schemas
  # from privilege management.
  schemas_query: |
    SELECT nspname FROM pg_catalog.pg_namespace
    WHERE nspname NOT LIKE 'pg_%' AND nspname <> 'information_schema'
    ORDER BY 1;

  



#
#       2.   P R I V I L E G E S   D E F I N I T I O N
#
# See https://ldap2pg.readthedocs.io/en/latest/privileges/. Privileges wrapped
# in double underscores are well-known privileges built-in ldap2pg. See
# https://ldap2pg.readthedocs.io/en/latest/wellknown/ for a documentation of
# each of them.
#

privileges:
  # privilège de lecture
  p_lecteurs:
  - __connect__
  - __select_on_tables__
  - __select_on_sequences__
  - __usage_on_schemas__
  - __usage_on_types__

  # Privilège pour les contributeurs
  p_contributeurs:
  - p_lecteurs
  - __insert_on_all_tables__
  - __select_on_all_tables__
  - __update_on_all_tables__

  # Privilège pour les administrateurs
  p_administrateurs:
  - p_contributeurs
  - __temporary__
  - __all_on_tables__
  - __all_on_sequences__
  - __create_on_schemas__


#
#       3.   S Y N C H R O N I S A T I O N   M A P
#
# This list contains rules to declare roles and grants. Each role or grant rule
# can be templated with attributes from LDAP entries returned by a search
# query.
#
# Any role found in cluster and not generated by sync_map will be dropped. Any
# grant found in cluster and not generated by sync_map will be revoked.
#

sync_map:
- description: "Création des rôles statiques et attributation des droits par rôle."
  roles:
  # Role pour ldap2pg
  - names:
    - ldap_roles
    options: NOLOGIN

  - name: SVC_SIG_4AD@lesagencesdeleau.eu
    options: LOGIN
  ################################
  #          rôles AESN          #
  ################################
  # Roles utilisateurs pour AESN
  - names:
    - aesn_dbn_sig_utilisateurs
    - aesn_drif_sig_utilisateurs
    - aesn_dsam_sig_utilisateurs
    - aesn_dsav_sig_utilisateurs
    - aesn_dvm_sig_utilisateurs
    - aesn_dvo_sig_utilisateurs

  - name: aesn_sig_utilisateurs
    parents:
    - aesn_dbn_sig_utilisateurs
    - aesn_drif_sig_utilisateurs
    - aesn_dsam_sig_utilisateurs
    - aesn_dsav_sig_utilisateurs
    - aesn_dvm_sig_utilisateurs
    - aesn_dvo_sig_utilisateurs

  # Roles utilisateurs avancés pour AESN
  - name: aesn_dbn_sig_utilisateurs_avances
    parent: aesn_dbn_sig_utilisateurs
  - name: aesn_drif_sig_utilisateurs_avances
    parent: aesn_drif_sig_utilisateurs
  - name: aesn_dsam_sig_utilisateurs_avances
    parent: aesn_dsam_sig_utilisateurs
  - name: aesn_dsav_sig_utilisateurs_avances
    parent: aesn_dsav_sig_utilisateurs
  - name: aesn_dvm_sig_utilisateurs_avances
    parent: aesn_dvm_sig_utilisateurs
  - name: aesn_dvo_sig_utilisateurs_avances
    parent: aesn_dvo_sig_utilisateurs

  - name: aesn_sig_utilisateurs_avances
    parents:
    - aesn_dbn_sig_utilisateurs_avances
    - aesn_drif_sig_utilisateurs_avances
    - aesn_dsam_sig_utilisateurs_avances
    - aesn_dsav_sig_utilisateurs_avances
    - aesn_dvm_sig_utilisateurs_avances
    - aesn_dvo_sig_utilisateurs_avances

  # Roles administrateurs fonctionnels pour AESN
  - name: aesn_dbn_sig_admin_fonctionnels
    parent: aesn_dbn_sig_utilisateurs_avances
  - name: aesn_drif_sig_admin_fonctionnels
    parent: aesn_drif_sig_utilisateurs_avances
  - name: aesn_dsam_sig_admin_fonctionnels
    parent: aesn_dsam_sig_utilisateurs_avances
  - name: aesn_dsav_sig_admin_fonctionnels
    parent: aesn_dsav_sig_utilisateurs_avances
  - name: aesn_dvm_sig_admin_fonctionnels
    parent: aesn_dvm_sig_utilisateurs_avances
  - name: aesn_dvo_sig_admin_fonctionnels
    parent: aesn_dvo_sig_utilisateurs_avances

  - name: aesn_sig_admin_fonctionnels
    parents:
    - aesn_dbn_sig_admin_fonctionnels
    - aesn_drif_sig_admin_fonctionnels
    - aesn_dsam_sig_admin_fonctionnels
    - aesn_dsav_sig_admin_fonctionnels
    - aesn_dvm_sig_admin_fonctionnels
    - aesn_dvo_sig_admin_fonctionnels

  ################################
  #          rôles AEAP          #
  ################################
  # Roles utilisateurs pour AEAP
  - name: aeap_sig_utilisateurs
  # Roles utilisateurs avancés pour AEAP
  - name: aeap_sig_utilisateurs_avances
    parent: aeap_sig_utilisateurs
  # Roles les administrateurs fonctionnels pour AEAP
  - name: aeap_sig_admin_fonctionnels
    parents: aeap_sig_utilisateurs_avances

  ################################
  #          rôles LADE          #
  ################################
  # Roles utilisateurs pour LADE
  - name: lade_sig_utilisateurs
    parents:
    - aeap_sig_utilisateurs
    - aesn_sig_utilisateurs
  # Roles utilisateurs avancés pour LADE
  - name: lade_sig_utilisateurs_avances
    parents:
    - lade_sig_utilisateurs
    - aeap_sig_utilisateurs_avances
    - aesn_sig_utilisateurs_avances
  # Roles administrateurs fonctionnels pour LADE
  - name: lade_sig_admin_fonctionnels
    parents:
    - lade_sig_utilisateurs_avances
    - aeap_sig_admin_fonctionnels
    - aesn_sig_admin_fonctionnels
  # Roles administrateurs techniques pour LADE
  - name: lade_sig_admin_tech
    parents:
    - lade_sig_admin_fonctionnels


  grant:
  ################################
  #          droits AESN         #
  ################################

  # Pour les utilisateurs AESN
  - privilege: p_lecteurs
    role:
    - aesn_sig_utilisateurs
    databases:
    - travail_commun
    - travail_aesn
    schemas: __all__
  # Pour les utilisateurs avancées AESN DBN
  - privilege: p_contributeurs
    role: aesn_dbn_sig_utilisateurs_avances
    databases: travail_aesn
    schema: travail_dbn
  # Pour les utilisateurs avancées AESN DRIF
  - privilege: p_contributeurs
    role: aesn_drif_sig_utilisateurs_avances
    databases: travail_aesn
    schema: travail_drif

  ################################
  #      droits applicatifs      #
  ################################
  # Pour l'applicatif QWC2
  - privilege: p_administrateurs
    role: SVC_SIG_4AD@lesagencesdeleau.eu
    databases:
    - qwc2
    - ref_int
    - ref_ext
    schema: __all__


- description: "Création des superutilisateurs"
  ldapsearch:
    base: cn=users,dc=dc57,dc=sig
    filter: "(&(objectClass=person)(memberof=cn=grp_sig_test,cn=groups,dc=dc57,dc=sig))"
  role:
    # LDAP attribute member is a Distinguished Name. Use CN component of the
    # member value.
    #name: '{member.cn}'
    name: '{AzureADuserPrincipalName}'
    options: LOGIN SUPERUSER
    parent:
    - ldap_roles
    - lade_sig_admin_tech
    #comment: "From LDAP group {dn}"
    comment: "From LDAP group {dn}"

- description: "Création des utilisateurs AESN."
  ldapsearch:
    base: cn=users,dc=dc57,dc=sig
    filter: >
      (&
        (objectClass=person)
        (memberof=cn=aesn_agents,cn=groups,dc=dc57,dc=sig)
      )
  role:
    name: '{AzureADuserPrincipalName}'
    options: LOGIN
    parent:
    - ldap_roles
    - aesn_sig_utilisateurs
    comment: "Créé à partir de ldap2pg"

- description: "Search LDAP to create service account."
  ldapsearch:
    base: cn=users,dc=dc57,dc=sig
    filter: "cn=SVC_SIG_4AD"
  role:
    name: '{AzureADuserPrincipalName}'
    options: LOGIN
    parent:
    - ldap_roles
    - owners
    comment: "From LDAP group {dn}"
