version: '3.4'

x-qwc-service-variables: &qwc-service-variables
  JWT_SECRET_KEY: $JWT_SECRET_KEY
  JWT_COOKIE_CSRF_PROTECT: 'True'
  # Set these to override the UID/GID which runs uwsgi. Useful to ensure uwsgi runs under the same user/group
  # which owns the shared volumes on host, avoiding the need to change the ownership/permissions of those files/folders.
  SERVICE_UID: ${UID}
  SERVICE_GID: ${GID}
  PGSERVICEFILE: "/srv/pg_services/pg_service.conf"
  #TENANT_URL_RE: '^https?://(.+?)[-|.]'
  TENANT_URL_RE: ^https?://.+?/(.+?)/
  #TENANT_HEADER: 'Tenant_LADE'
  FLASK_DEBUG: 1
  FLASK_ENV: 'development'
  POST_PARAM_LOGIN: True

services:
  qwc-qgis-server:
    image: sourcepole/qwc-qgis-server:3.22-plugins
    environment:
      <<: *qwc-service-variables
      QGIS_SERVER_LOG_LEVEL: DEBUG
      QGIS_SERVER_LOG_PROFILE: true

    volumes:
      - qgs-resources:/data:ro
      - pg_services:/etc/postgresql-common:ro
      - /etc/localtime:/etc/localtime:ro
      - qgs-server-auth-db:/qgs-server-auth-db
      - qgs-server-conf:/etc/apache2/sites-enabled
    networks:
      - qwc2_network

  qwc-config-service:
    image: sourcepole/qwc-config-generator:v2022.08.22
    # Lightweight variant without qgis, use if you don't need the split_categorized_layers feature
    # image: sourcepole/qwc-config-generator:v2022.08.22-noqgis
    environment:
      <<: *qwc-service-variables
      INPUT_CONFIG_PATH: '/srv/qwc_service/config-in'
      OUTPUT_CONFIG_PATH: '/srv/qwc_service/config-out'
      GENERATE_DYNAMIC_KVRELS: 1
    volumes:
      - config-in:/srv/qwc_service/config-in:ro
      - config:/srv/qwc_service/config-out
      - qwc2:/qwc2
      - qgs-resources:/data
      - pg_services:/srv/pg_services:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-ogc-service:
    image: sourcepole/qwc-ogc-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/ows'
    volumes:
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-data-service:
    image: sourcepole/qwc-data-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/data'
      ATTACHMENTS_BASE_DIR: '/attachments'
      MAX_ATTACHMENT_FILE_SIZE: 1048576
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - attachments:/attachments
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-solr:
    image: solr:8.11.1-slim
    entrypoint:
      - docker-entrypoint.sh
      - solr-precreate
      - gdi
      - /gdi_conf
    # ports:
     # - "127.0.0.1:8983:8983"
    volumes:
      - solr_gdi:/gdi_conf:ro
      # Configuration is copied once from /gdi_conf/ to /var/solr/data/
      # Change ownership to solr user with `sudo chown 8983:8983 volumes/solr/data`
      #- solr_data:/var/solr/data
      # Protect admin GUI and admin API with Basic auth
      # Change "#credentials" to "credentials" in security.json for adding a user 'solr' with password 'SolrRocks'
      #- ./volumes/solr/security.json:/var/solr/data/security.json:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-fulltext-search-service:
    image: sourcepole/qwc-fulltext-search-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v2/search'
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-map-viewer:
    image: sourcepole/qwc-map-viewer-demo:v2022.08.25
    # Update config.json with:
    # curl -o volumes/config-in/config.json https://github.com/qgis/qwc2-demo-app/raw/v2022.01.08/static/config.json
    # and generate service configuration
    # With custom build added via volume:
    # image: sourcepole/qwc-map-viewer-base:v2022.08.25
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/'

    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      # When using qwc-map-viewer-demo:
      - assets:/qwc2/assets:ro
      # When using own viewer build with qwc-map-viewer-base:
      #- qwc2:/qwc2:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-admin-gui:
    image: sourcepole/qwc-admin-gui:v2022.08.19
    environment:
      <<: *qwc-service-variables
      # Don't enable JWT CSRF protection for admin gui, it conflicts with CSRF protection offered by Flask-WTF
      JWT_COOKIE_CSRF_PROTECT: 'False'
      USER_INFO_FIELDS: '[{"title": "Surname", "name": "surname", "type": "text", "required": true}, {"title": "First name", "name": "first_name", "type": "text", "required": true}, {"title": "Street", "name": "street", "type": "text"}, {"title": "ZIP", "name": "zip", "type": "text"}, {"title": "City", "name": "city", "type": "text"}]'
      #TOTP_ENABLED: 'False'
      GROUP_REGISTRATION_ENABLED: 'True'
      IDLE_TIMEOUT: 600
      DEFAULT_LOCALE: 'en'
      MAIL_SUPPRESS_SEND: 'True'
      MAIL_DEFAULT_SENDER: 'from@example.com'
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
      # Volumes for plugins
      - qwc2:/qwc2:ro
      - qgs-resources:/data
      - config-in:/srv/qwc_service/config-in
    networks:
      - qwc2_network

  qwc-auth-service:
    image: sourcepole/qwc-db-auth:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/auth'
      # https://flask-jwt-extended.readthedocs.io/en/stable/options/#cookie-options
      JWT_COOKIE_SAMESITE: 'Strict'
      # Enable the following in production (requires https):
      #JWT_COOKIE_SECURE: 'True'
      #TOTP_ENABLED: 'False'
      #TOTP_ISSUER_NAME: 'QWC Services'
      MAIL_SUPPRESS_SEND: 'True'
      MAIL_DEFAULT_SENDER: 'from@example.com'
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network
      
  qwc-auth-service2:
    image: sourcepole/qwc-ldap-auth:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/auth'
      JWT_COOKIE_SAMESITE: 'Strict'
      LDAP_HOST: ${LDAP_HOST}
      LDAP_PORT: 389
      LDAP_USE_SSL: False
      LDAP_BASE_DN: ${LDAP_BASE_DN}
      LDAP_USER_DN: 'ou=agents'
      LDAP_GROUP_DN: 'ou=groupes'
      LDAP_SEARCH_FOR_GROUPS: True
      LDAP_GROUP_OBJECT_FILTER: '(objectClass=groupOfUniqueNames)'
      LDAP_GROUP_SEARCH_SCOPE: 'SUBTREE'
      LDAP_USER_LOGIN_ATTR: 'uid'
      LDAP_BIND_USER_DN: ${LDAP_BIND_USER_DN}
      LDAP_BIND_USER_PASSWORD: ${LDAP_BIND_USER_PASSWORD}
    volumes:
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-elevation-service:
    image: sourcepole/qwc-elevation-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/elevation'
    volumes:
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-permalink-service:
    image: sourcepole/qwc-permalink-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/permalink'
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-print-service:
    image: sourcepole/qwc-print-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/print'
    volumes:
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-feature-info-service:
    image: sourcepole/qwc-feature-info-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/featureinfo'
      # SKIP_EMPTY_ATTRIBUTES: 1
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-mapinfo-service:
    image: sourcepole/qwc-mapinfo-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/mapinfo'
    volumes:
      - pg_services:/srv/pg_services:ro
      - config:/srv/qwc_service/config:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network

  qwc-legend-service:
    image: sourcepole/qwc-legend-service:v2022.08.22
    environment:
      <<: *qwc-service-variables
      SERVICE_MOUNTPOINT: '/api/v1/legend'
    volumes:
      - config:/srv/qwc_service/config:ro
      - legends:/legends
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network
      
  qwc-project-publisher:
    image: registry.niaubin.fr/qwc-project-publisher
    environment:
      <<: *qwc-service-variables
      AUTH_REQUIRED: True
      SERVICE_MOUNTPOINT: '/publisher'
    volumes:
      - config:/srv/qwc_service/config:ro
      - qgs-resources:/data
      - pg_services:/srv/pg_services:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network
      
  qgis-plugins-repository:
    image: registry.niaubin.fr/simple-qgisplugins-repo
    environment:
      MOUNTPOINT: "/plugins/"
    volumes:
      - plugins-dir:/app/downloads
    networks:
      - qwc2_network

  qwc-api-gateway:
    image: nginx:1.19
    ports:
      - "8089:80"
    command: [nginx-debug, '-g', 'daemon off;']
    volumes:
      - api-gateway_conf:/etc/nginx/conf.d:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - qwc2_network
      - sig_network
    depends_on:
      - qwc-config-service
      - qwc-qgis-server
      - qwc-ogc-service
      - qwc-map-viewer
      - qwc-auth-service
      - qwc-feature-info-service
      - qwc-legend-service
      - qwc-mapinfo-service
      - qwc-permalink-service
      - qwc-elevation-service
      - qwc-fulltext-search-service
      - qwc-data-service
      - qwc-admin-gui
      - qwc-project-publisher

networks:
  sig_network:
    external: true
    name: sig_network

  qwc2_network:
    external: true
    name: qwc2_network

volumes:
  pg_services:
    driver_opts:
      type: "cifs"
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/pg_services"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}

  api-gateway_conf:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/api-gateway_conf"

  config:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/config"

  config-in:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/config-in"

  qgs-resources:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/qgs-resources"

  qwc2:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/qwc2"

  assets:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/qwc2/assets"
    
  legends:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/legends"
      
  attachments:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/attachments"

  solr_gdi:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/solr/configsets/gdi"

  solr_data:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/solr/data"
      
  qgs-server-auth-db:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/qgs-server/auth_db"
      
  qgs-server-conf:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/qgs-server/apache_conf"
      
  plugins-dir:
    driver_opts:
      type: "cifs"
      o: addr=${CIFS_HOST},username=${CIFS_USER},password=${CIFS_PASS},vers=1.0,file_mode=0777,dir_mode=0777,uid=${UID},gid=${GID}
      device: "//${CIFS_HOST}/${CIFS_ROOT_DIR}/stacks/QWC2/volumes/plugins-repository"
